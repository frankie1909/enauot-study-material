# ENAUTO 1.5 – Describe the Benefits of Python Virtual Environments

## 🔹 What is a Python Virtual Environment?

A **Python virtual environment** is a self-contained directory that contains a Python installation for a particular version of Python, plus a number of additional packages. It allows you to isolate your project-specific dependencies and manage them without affecting the system-wide Python installation or other projects.

A virtual environment:
- Has its own `pip`, `python`, and `site-packages` folder
- Keeps dependencies isolated
- Simplifies testing and deployment

📚 References:
- Python Docs: https://docs.python.org/3/library/venv.html  
- RealPython: https://realpython.com/python-virtual-environments-a-primer/  
- Medium: https://medium.com/pythoneers/why-do-we-need-a-virtual-environment-for-a-python-project-37a6af754044  

---

## ✅ Benefits of Python Virtual Environments

| **Benefit**                  | **Description** |
|-----------------------------|-----------------|
| **Dependency Isolation**     | Keeps each project's libraries separate and avoids global conflicts. |
| **Reproducibility**          | Allows other users to recreate the same environment using `requirements.txt`. |
| **No Admin Rights Needed**   | Install libraries without needing root or system-level permissions. |
| **Easy Cleanup**             | Just delete the environment folder to remove everything. |
| **Safe Testing**             | Experiment with new packages without affecting your global setup. |
| **Avoid Version Conflicts**  | Prevents interference between projects with different dependency versions. |

---

## 🛠️ How to Create and Use a Virtual Environment

This example shows how to use a virtual environment in a Cisco automation project.

### 1. Create the Project Folder
```bash
mkdir my_project
cd my_project

## 2. Create the Virtual Environment

This will create a folder named venv/

**python3 -m venv venv**

## 3. Activate the Virtual Environment
- on macOS/Linux
**source venv/bin/activate**

## 4 Create a requirements.txt file **optional**

List the packages and versions your project needs: for instance
requests==2.31.0
netmiko>=4.0.0

## 5 Install packages from requirements file **optional**
pip install -r requirements.txt

## Freeze Current Packages to requirements.txt **optional**

pip freeze > requirements.txt
